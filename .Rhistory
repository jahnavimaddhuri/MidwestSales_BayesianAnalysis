# load required libraries
library(tidyverse)
library(bayesrules)
library(rstanarm)
library(bayesplot)
# load midwest data frame
midwest <- read.csv("MidwestSales.txt", sep="")
set.seed(84735) #set seed for ability to reproduce sampling
# Creating data frame for 100 samples of midwest data + filtering
#   for houses with ac
midwest_sample = midwest %>%
sample_n(100)
midwest_sample = midwest_sample %>%
filter(ac == 1)
nrow(midwest_sample) #count number of successes
# Find posterior distribution based on prior + likelihood
summarize_beta_binomial(alpha = 17, beta = 3, x = 82, n = 100)
bayesrules::plot_beta(17,3)
plot_beta(99,21)
posterior_prob = pbeta(0.8, 99, 21, lower.tail = FALSE)
posterior_odds = posterior_prob/(1-posterior_prob)
posterior_odds
prior_prob = pbeta(0.8, 17, 3, lower.tail = FALSE)
prior_odds = prior_prob/(1-prior_prob)
prior_odds
bayes_factor = posterior_odds/prior_odds
bayes_factor
plot_beta_ci(99,21)
#Calculating the lower and upper bounds for the credible interval
lower_bound = qbeta(.025, 100,20)
upper_bound = qbeta(.975, 100, 20)
lower_bound
upper_bound
# Create a data frame of 522 samples
midwest <- midwest %>%
sample_n(522)
##separate data into test/train data frames
midwest_train <- midwest %>%
sample_frac(0.80)
midwest_test <- midwest %>%
anti_join(midwest_train, by = "sqft")
# Create a model to predict Price based on Square Foot
normal_model <- stan_glm(Price~sqft,
data = midwest_train,
family = gaussian,
chains = 4, iter = 5000*2)
prior_summary(normal_model)
mcmc_trace(normal_model) #trace plots for intercept, slope and sigma
mcmc_dens_overlay(normal_model) #trace plots for intercept, slope and sigma
# table manipulation for slope, intercept and sigma approximations
normal_model_df <- as.array(normal_model) %>%
reshape2::melt() %>%
pivot_wider(names_from = parameters, values_from = value)
#returns boundaries on the middle 80% of the model parameters
posterior_interval(normal_model, prob = 0.80)
#create approximations for the slope, intercept and sigma
b1_mean <- mean(normal_model_df$sqft)
b0_mean <- mean(normal_model_df$`(Intercept)`)
sigma_mean <- mean(normal_model_df$sigma)
# we chose to model on the mean sqft based on the midwest data collection
average_sqft = mean(midwest$sqft)
y_trend <- b0_mean + b1_mean * average_sqft
rnorm(1, y_trend, sigma_mean) # sample from prediction distribution,
# include y_trend and y_new in prediction data frame
prediction <- normal_model_df %>%
mutate(y_trend = `(Intercept)` + sqft*average_sqft) %>%
mutate(y_new = rnorm(20000, y_trend, sigma))
# plot prediction
prediction %>%
ggplot() + aes(x = y_new) + geom_histogram()
summary(prediction) #get summary statistics on prediction
predictions <- posterior_predict(normal_model,
newdata = midwest_test)
ppc_intervals(midwest_test$Price,
yrep = predictions,
x = midwest_test$sqft,
prob = 0.5,
prob_outer = 0.95)
bayesrules::prediction_summary(y = midwest_test$Price,
yrep = predictions)
